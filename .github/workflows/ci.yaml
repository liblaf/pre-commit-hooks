name: CI

on:
  push:

jobs:
  release-please:
    name: Release Please
    permissions:
      contents: write
      pull-requests: write
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      created: ${{ steps.release.outputs.releases_created }}
      tag: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: release
        name: Release Please
        uses: google-github-actions/release-please-action@v4
        with:
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/.manifest.json

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        run: rustup default stable
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
      - name: Install Tools
        uses: liblaf/repo/.github/actions/install@main
        with:
          brew: coreutils gnu-sed make
          choco: gnuwin32-coreutils.install make sed
      - name: Build
        run: make dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}
          path: dist/*
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

  pre-release:
    name: Pre-release
    permissions:
      contents: write
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Release
        uses: liblaf/repo/.github/actions/release@main
        with:
          tag: dev
          files: dist/*
          pre-release: true
          recreate: true

  release:
    name: Release
    permissions:
      contents: write
    needs:
      - release-please
      - build
    if: needs.release-please.outputs.created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Release
        uses: liblaf/repo/.github/actions/release@main
        with:
          tag: ${{ needs.release-please.outputs.tag }}
          files: dist/*
